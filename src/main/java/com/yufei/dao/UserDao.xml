<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd" "mybatis-3-mapper.dtd" >
<mapper namespace="com.yufei.dao.UserDao">
  		
  		<resultMap type="User" id="userResult">
  			<id column="uid" property="uid"/>
  			<result column="uname" property="uname"/>
  			<result column="upassword" property="upassword"/>
  			<result column="nickname" property="nickname"/>
  			<result column="phone" property="phone"/>
  			<result column="email" property="email"/>
  			<result column="ustatus" property="ustatus"/>
  			<result column="utext" property="utext"/>
  			<association property="group" javaType="Group">
  				<id column="gid" property="gid"/>
  				<result column="gname" property="gname"/>
  			</association>
  			<collection property="roles" ofType="Role">
  				<id column="rid" property="rid"/>
  				<result column="rname" property="rname"/>
  			</collection>
  		</resultMap>
  		
  		<select id="login" parameterType="User" resultMap="userResult">
  			select u.*, r.*, g.*
  				from sys_user u, sys_role r, sys_group g, user_role ur 
  					where u.gid = g.gid 
  					and u.uid = ur.uid 
  					and r.rid = ur.rid 
  					and u.uname = #{uname} 
  					and u.upassword = #{upassword}
  		</select>
  		
  		<select id="findAll"  resultMap="userResult" parameterType="User">
  			select u.*, r.*, g.gname
  				from sys_user u, sys_role r, sys_group g, user_role ur 
  					where u.gid = g.gid 
  					and u.uid = ur.uid 
  					and r.rid = ur.rid 
  					<if test="uname!=null and uname!=''">
  						and u.uname like "%"#{uname}"%"
  					</if>
  					<if test="nickname!=null and nickname!=''">
  						and u.nickname like "%"#{nickname}"%"
  					</if>
  					<if test="group!=null and group.gid!=null and group.gid!=''">
  						and u.gid = #{group.gid}
  					</if>
  					 order by u.uid desc
  					
  					
  		</select>
  		
  		<select id="findCount" parameterType="User" resultType="Integer">
  			select count(1)
  				from sys_user u, sys_role r, sys_group g, user_role ur 
  					where u.gid = g.gid 
  					and u.uid = ur.uid 
  					and r.rid = ur.rid 
  					<if test="uname!=null and uname!=''">
  						and u.uname like "%"#{uname}"%"
  					</if>
  					<if test="nickname!=null and nickname!=''">
  						and u.nickname like "%"#{nickname}"%"
  					</if>
  					<if test="group!=null and group.gid!=null and group.gid!=''">
  						and u.gid = #{group.gid}
  					</if>
  		</select>
  		
  		
  		<select id="findByUid" parameterType="Integer" resultMap="userResult">
  				select u.*, r.*, g.*
  				from sys_user u, sys_role r, sys_group g, user_role ur 
  					where u.gid = g.gid 
  					and u.uid = ur.uid 
  					and r.rid = ur.rid 
  					and u.uid = #{uid}
  		</select>
  		
  		<update id="updateUser" parameterType="User">
  			update sys_user set
  				uname = #{uname},
  				nickname = #{nickname},
  				phone = #{phone},
  				email = #{email},
  				utext = #{utext},
  				gid = #{group.gid} 
  				where uid = #{uid}
  		</update>
  		
  		<delete id="deleteUser_Role" parameterType="Integer">
  			delete  from user_role where uid = #{uid}
  		</delete>
  		
  		<insert id="addUser_Role" parameterType="User_Role">
  			insert into user_role values(#{uid},#{rid})
  		</insert>
  		
  		
  		<update id="offUser" parameterType="Integer">
  			update sys_user set ustatus = 0 where uid = #{uid} 
  		</update>
  		
  		<update id="onUser" parameterType="Integer">
  			update sys_user set ustatus = 1 where uid = #{uid} 
  		</update>
  		
  		<delete id="deleteUser" parameterType="Integer">
  			delete  from sys_user where uid = #{uid}
  		</delete>
  		
  		<insert id="addUser" parameterType="User" useGeneratedKeys="true" keyProperty="uid">
  			insert into sys_user values
  				( 	null,
  					#{uname},
  					null,
	  				#{nickname},
	  				#{phone},
	  				#{email},
	  				#{group.gid},
	  				1,
	  				#{utext}
  				)
		
  		</insert>
  		
  		<update id="updatePwd" parameterType="User">
  			update sys_user set upassword = #{upassword} where uid =#{uid}
  		</update>
  		
  		
</mapper>
